// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: service.trade-account/proto/tradeaccount.proto

package tradeaccountproto

import (
	proto "github.com/sashajdn/sasha/service.trade-engine/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PagerType int32

const (
	PagerType_DISCORD PagerType = 0
	PagerType_PHONE   PagerType = 1
	PagerType_SMS     PagerType = 2
	PagerType_EMAIL   PagerType = 3
)

// Enum value maps for PagerType.
var (
	PagerType_name = map[int32]string{
		0: "DISCORD",
		1: "PHONE",
		2: "SMS",
		3: "EMAIL",
	}
	PagerType_value = map[string]int32{
		"DISCORD": 0,
		"PHONE":   1,
		"SMS":     2,
		"EMAIL":   3,
	}
)

func (x PagerType) Enum() *PagerType {
	p := new(PagerType)
	*p = x
	return p
}

func (x PagerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PagerType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_trade_account_proto_tradeaccount_proto_enumTypes[0].Descriptor()
}

func (PagerType) Type() protoreflect.EnumType {
	return &file_service_trade_account_proto_tradeaccount_proto_enumTypes[0]
}

func (x PagerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PagerType.Descriptor instead.
func (PagerType) EnumDescriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{0}
}

type PagerPriority int32

const (
	PagerPriority_HIGH PagerPriority = 0
	PagerPriority_LOW  PagerPriority = 1
)

// Enum value maps for PagerPriority.
var (
	PagerPriority_name = map[int32]string{
		0: "HIGH",
		1: "LOW",
	}
	PagerPriority_value = map[string]int32{
		"HIGH": 0,
		"LOW":  1,
	}
)

func (x PagerPriority) Enum() *PagerPriority {
	p := new(PagerPriority)
	*p = x
	return p
}

func (x PagerPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PagerPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_service_trade_account_proto_tradeaccount_proto_enumTypes[1].Descriptor()
}

func (PagerPriority) Type() protoreflect.EnumType {
	return &file_service_trade_account_proto_tradeaccount_proto_enumTypes[1]
}

func (x PagerPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PagerPriority.Descriptor instead.
func (PagerPriority) EnumDescriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{1}
}

type VenueAccountType int32

const (
	VenueAccountType_TESTING  VenueAccountType = 0
	VenueAccountType_TRADING  VenueAccountType = 1
	VenueAccountType_TREASURY VenueAccountType = 2
)

// Enum value maps for VenueAccountType.
var (
	VenueAccountType_name = map[int32]string{
		0: "TESTING",
		1: "TRADING",
		2: "TREASURY",
	}
	VenueAccountType_value = map[string]int32{
		"TESTING":  0,
		"TRADING":  1,
		"TREASURY": 2,
	}
)

func (x VenueAccountType) Enum() *VenueAccountType {
	p := new(VenueAccountType)
	*p = x
	return p
}

func (x VenueAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VenueAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_trade_account_proto_tradeaccount_proto_enumTypes[2].Descriptor()
}

func (VenueAccountType) Type() protoreflect.EnumType {
	return &file_service_trade_account_proto_tradeaccount_proto_enumTypes[2]
}

func (x VenueAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VenueAccountType.Descriptor instead.
func (VenueAccountType) EnumDescriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{2}
}

// Only used for responses, we currently don't have mechanisms to remove sensitived data such
// as keys or phones. This should only contain insensitive data.
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email                string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	IsFuturesMember      bool                   `protobuf:"varint,3,opt,name=is_futures_member,json=isFuturesMember,proto3" json:"is_futures_member,omitempty"`
	IsAdmin              bool                   `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	Username             string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Created              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	LastPaymentTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_payment_timestamp,json=lastPaymentTimestamp,proto3" json:"last_payment_timestamp,omitempty"`
	PrimaryVenue         string                 `protobuf:"bytes,9,opt,name=primary_venue,json=primaryVenue,proto3" json:"primary_venue,omitempty"`
	DefaultDcaStrategy   string                 `protobuf:"bytes,10,opt,name=default_dca_strategy,json=defaultDcaStrategy,proto3" json:"default_dca_strategy,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetIsFuturesMember() bool {
	if x != nil {
		return x.IsFuturesMember
	}
	return false
}

func (x *Account) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *Account) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Account) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Account) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Account) GetLastPaymentTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPaymentTimestamp
	}
	return nil
}

func (x *Account) GetPrimaryVenue() string {
	if x != nil {
		return x.PrimaryVenue
	}
	return ""
}

func (x *Account) GetDefaultDcaStrategy() string {
	if x != nil {
		return x.DefaultDcaStrategy
	}
	return ""
}

type VenueAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue          proto.VENUE `protobuf:"varint,1,opt,name=venue,proto3,enum=VENUE" json:"venue,omitempty"`
	ApiKey         string      `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	SecretKey      string      `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SubAccount     string      `protobuf:"bytes,4,opt,name=sub_account,json=subAccount,proto3" json:"sub_account,omitempty"`
	IsActive       bool        `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	VenueAccountId string      `protobuf:"bytes,6,opt,name=venue_account_id,json=venueAccountId,proto3" json:"venue_account_id,omitempty"`
	Url            string      `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	WsUrl          string      `protobuf:"bytes,8,opt,name=ws_url,json=wsUrl,proto3" json:"ws_url,omitempty"`
	AccountAlias   string      `protobuf:"bytes,9,opt,name=account_alias,json=accountAlias,proto3" json:"account_alias,omitempty"`
}

func (x *VenueAccount) Reset() {
	*x = VenueAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VenueAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VenueAccount) ProtoMessage() {}

func (x *VenueAccount) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VenueAccount.ProtoReflect.Descriptor instead.
func (*VenueAccount) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{1}
}

func (x *VenueAccount) GetVenue() proto.VENUE {
	if x != nil {
		return x.Venue
	}
	return proto.VENUE(0)
}

func (x *VenueAccount) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *VenueAccount) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *VenueAccount) GetSubAccount() string {
	if x != nil {
		return x.SubAccount
	}
	return ""
}

func (x *VenueAccount) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *VenueAccount) GetVenueAccountId() string {
	if x != nil {
		return x.VenueAccountId
	}
	return ""
}

func (x *VenueAccount) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VenueAccount) GetWsUrl() string {
	if x != nil {
		return x.WsUrl
	}
	return ""
}

func (x *VenueAccount) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

type InternalVenueAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue            proto.VENUE      `protobuf:"varint,1,opt,name=venue,proto3,enum=VENUE" json:"venue,omitempty"`
	ApiKey           string           `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	SecretKey        string           `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SubAccount       string           `protobuf:"bytes,4,opt,name=sub_account,json=subAccount,proto3" json:"sub_account,omitempty"`
	VenueAccountId   string           `protobuf:"bytes,6,opt,name=venue_account_id,json=venueAccountId,proto3" json:"venue_account_id,omitempty"`
	Url              string           `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	WsUrl            string           `protobuf:"bytes,8,opt,name=ws_url,json=wsUrl,proto3" json:"ws_url,omitempty"`
	VenueAccountType VenueAccountType `protobuf:"varint,9,opt,name=venue_account_type,json=venueAccountType,proto3,enum=VenueAccountType" json:"venue_account_type,omitempty"`
}

func (x *InternalVenueAccount) Reset() {
	*x = InternalVenueAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalVenueAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalVenueAccount) ProtoMessage() {}

func (x *InternalVenueAccount) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalVenueAccount.ProtoReflect.Descriptor instead.
func (*InternalVenueAccount) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{2}
}

func (x *InternalVenueAccount) GetVenue() proto.VENUE {
	if x != nil {
		return x.Venue
	}
	return proto.VENUE(0)
}

func (x *InternalVenueAccount) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *InternalVenueAccount) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *InternalVenueAccount) GetSubAccount() string {
	if x != nil {
		return x.SubAccount
	}
	return ""
}

func (x *InternalVenueAccount) GetVenueAccountId() string {
	if x != nil {
		return x.VenueAccountId
	}
	return ""
}

func (x *InternalVenueAccount) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *InternalVenueAccount) GetWsUrl() string {
	if x != nil {
		return x.WsUrl
	}
	return ""
}

func (x *InternalVenueAccount) GetVenueAccountType() VenueAccountType {
	if x != nil {
		return x.VenueAccountType
	}
	return VenueAccountType_TESTING
}

type ListAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFuturesMember bool `protobuf:"varint,1,opt,name=is_futures_member,json=isFuturesMember,proto3" json:"is_futures_member,omitempty"`
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{3}
}

func (x *ListAccountsRequest) GetIsFuturesMember() bool {
	if x != nil {
		return x.IsFuturesMember
	}
	return false
}

type ListAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *ListAccountsResponse) Reset() {
	*x = ListAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsResponse) ProtoMessage() {}

func (x *ListAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{4}
}

func (x *ListAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type ReadAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ReadAccountRequest) Reset() {
	*x = ReadAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAccountRequest) ProtoMessage() {}

func (x *ReadAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAccountRequest.ProtoReflect.Descriptor instead.
func (*ReadAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{5}
}

func (x *ReadAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ReadAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *ReadAccountResponse) Reset() {
	*x = ReadAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAccountResponse) ProtoMessage() {}

func (x *ReadAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAccountResponse.ProtoReflect.Descriptor instead.
func (*ReadAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{6}
}

func (x *ReadAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username          string    `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email             string    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber       string    `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	HighPriorityPager PagerType `protobuf:"varint,6,opt,name=high_priority_pager,json=highPriorityPager,proto3,enum=PagerType" json:"high_priority_pager,omitempty"`
	LowPriorityPager  PagerType `protobuf:"varint,7,opt,name=low_priority_pager,json=lowPriorityPager,proto3,enum=PagerType" json:"low_priority_pager,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{7}
}

func (x *CreateAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateAccountRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateAccountRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateAccountRequest) GetHighPriorityPager() PagerType {
	if x != nil {
		return x.HighPriorityPager
	}
	return PagerType_DISCORD
}

func (x *CreateAccountRequest) GetLowPriorityPager() PagerType {
	if x != nil {
		return x.LowPriorityPager
	}
	return PagerType_DISCORD
}

type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{8}
}

type UpdateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username           string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email              string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber        string      `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	HighPriorityPager  PagerType   `protobuf:"varint,6,opt,name=high_priority_pager,json=highPriorityPager,proto3,enum=PagerType" json:"high_priority_pager,omitempty"`
	LowPriorityPager   PagerType   `protobuf:"varint,7,opt,name=low_priority_pager,json=lowPriorityPager,proto3,enum=PagerType" json:"low_priority_pager,omitempty"`
	IsAdmin            bool        `protobuf:"varint,9,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	IsFutures          bool        `protobuf:"varint,10,opt,name=is_futures,json=isFutures,proto3" json:"is_futures,omitempty"`
	ActorId            string      `protobuf:"bytes,11,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	DefaultDcaStrategy string      `protobuf:"bytes,12,opt,name=default_dca_strategy,json=defaultDcaStrategy,proto3" json:"default_dca_strategy,omitempty"`
	PrimaryVenue       proto.VENUE `protobuf:"varint,13,opt,name=primary_venue,json=primaryVenue,proto3,enum=VENUE" json:"primary_venue,omitempty"`
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateAccountRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAccountRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateAccountRequest) GetHighPriorityPager() PagerType {
	if x != nil {
		return x.HighPriorityPager
	}
	return PagerType_DISCORD
}

func (x *UpdateAccountRequest) GetLowPriorityPager() PagerType {
	if x != nil {
		return x.LowPriorityPager
	}
	return PagerType_DISCORD
}

func (x *UpdateAccountRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UpdateAccountRequest) GetIsFutures() bool {
	if x != nil {
		return x.IsFutures
	}
	return false
}

func (x *UpdateAccountRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *UpdateAccountRequest) GetDefaultDcaStrategy() string {
	if x != nil {
		return x.DefaultDcaStrategy
	}
	return ""
}

func (x *UpdateAccountRequest) GetPrimaryVenue() proto.VENUE {
	if x != nil {
		return x.PrimaryVenue
	}
	return proto.VENUE(0)
}

type UpdateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *UpdateAccountResponse) Reset() {
	*x = UpdateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountResponse) ProtoMessage() {}

func (x *UpdateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type PageAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content  string        `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Priority PagerPriority `protobuf:"varint,3,opt,name=priority,proto3,enum=PagerPriority" json:"priority,omitempty"`
}

func (x *PageAccountRequest) Reset() {
	*x = PageAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageAccountRequest) ProtoMessage() {}

func (x *PageAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageAccountRequest.ProtoReflect.Descriptor instead.
func (*PageAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{11}
}

func (x *PageAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PageAccountRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PageAccountRequest) GetPriority() PagerPriority {
	if x != nil {
		return x.Priority
	}
	return PagerPriority_HIGH
}

type PageAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PageAccountResponse) Reset() {
	*x = PageAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageAccountResponse) ProtoMessage() {}

func (x *PageAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageAccountResponse.ProtoReflect.Descriptor instead.
func (*PageAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{12}
}

type AddVenueAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccount *VenueAccount `protobuf:"bytes,1,opt,name=venue_account,json=venueAccount,proto3" json:"venue_account,omitempty"`
	UserId       string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActorId      string        `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *AddVenueAccountRequest) Reset() {
	*x = AddVenueAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVenueAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVenueAccountRequest) ProtoMessage() {}

func (x *AddVenueAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVenueAccountRequest.ProtoReflect.Descriptor instead.
func (*AddVenueAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{13}
}

func (x *AddVenueAccountRequest) GetVenueAccount() *VenueAccount {
	if x != nil {
		return x.VenueAccount
	}
	return nil
}

func (x *AddVenueAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddVenueAccountRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type AddVenueAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccount *VenueAccount `protobuf:"bytes,1,opt,name=venue_account,json=venueAccount,proto3" json:"venue_account,omitempty"`
	Verified     bool          `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	Reason       string        `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AddVenueAccountResponse) Reset() {
	*x = AddVenueAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVenueAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVenueAccountResponse) ProtoMessage() {}

func (x *AddVenueAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVenueAccountResponse.ProtoReflect.Descriptor instead.
func (*AddVenueAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{14}
}

func (x *AddVenueAccountResponse) GetVenueAccount() *VenueAccount {
	if x != nil {
		return x.VenueAccount
	}
	return nil
}

func (x *AddVenueAccountResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *AddVenueAccountResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CreateOrUpdateInternalVenueAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalVenueAccount *InternalVenueAccount `protobuf:"bytes,1,opt,name=internal_venue_account,json=internalVenueAccount,proto3" json:"internal_venue_account,omitempty"`
	UserId               string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActorId              string                `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	AllowUpdates         bool                  `protobuf:"varint,4,opt,name=allow_updates,json=allowUpdates,proto3" json:"allow_updates,omitempty"`
}

func (x *CreateOrUpdateInternalVenueAccountRequest) Reset() {
	*x = CreateOrUpdateInternalVenueAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateInternalVenueAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateInternalVenueAccountRequest) ProtoMessage() {}

func (x *CreateOrUpdateInternalVenueAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateInternalVenueAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateInternalVenueAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{15}
}

func (x *CreateOrUpdateInternalVenueAccountRequest) GetInternalVenueAccount() *InternalVenueAccount {
	if x != nil {
		return x.InternalVenueAccount
	}
	return nil
}

func (x *CreateOrUpdateInternalVenueAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateOrUpdateInternalVenueAccountRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *CreateOrUpdateInternalVenueAccountRequest) GetAllowUpdates() bool {
	if x != nil {
		return x.AllowUpdates
	}
	return false
}

type CreateOrUpdateInternalVenueAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalVenueAccount *InternalVenueAccount `protobuf:"bytes,1,opt,name=internal_venue_account,json=internalVenueAccount,proto3" json:"internal_venue_account,omitempty"`
	Verified             bool                  `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	Reason               string                `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CreateOrUpdateInternalVenueAccountResponse) Reset() {
	*x = CreateOrUpdateInternalVenueAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateInternalVenueAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateInternalVenueAccountResponse) ProtoMessage() {}

func (x *CreateOrUpdateInternalVenueAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateInternalVenueAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateInternalVenueAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{16}
}

func (x *CreateOrUpdateInternalVenueAccountResponse) GetInternalVenueAccount() *InternalVenueAccount {
	if x != nil {
		return x.InternalVenueAccount
	}
	return nil
}

func (x *CreateOrUpdateInternalVenueAccountResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *CreateOrUpdateInternalVenueAccountResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ListVenueAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActiveOnly              bool   `protobuf:"varint,2,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	ActorId                 string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	WithUnmaskedCredentials bool   `protobuf:"varint,4,opt,name=with_unmasked_credentials,json=withUnmaskedCredentials,proto3" json:"with_unmasked_credentials,omitempty"`
}

func (x *ListVenueAccountsRequest) Reset() {
	*x = ListVenueAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenueAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenueAccountsRequest) ProtoMessage() {}

func (x *ListVenueAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenueAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListVenueAccountsRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{17}
}

func (x *ListVenueAccountsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListVenueAccountsRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ListVenueAccountsRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *ListVenueAccountsRequest) GetWithUnmaskedCredentials() bool {
	if x != nil {
		return x.WithUnmaskedCredentials
	}
	return false
}

type ListVenueAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccounts []*VenueAccount `protobuf:"bytes,1,rep,name=venue_accounts,json=venueAccounts,proto3" json:"venue_accounts,omitempty"`
}

func (x *ListVenueAccountsResponse) Reset() {
	*x = ListVenueAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVenueAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVenueAccountsResponse) ProtoMessage() {}

func (x *ListVenueAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVenueAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListVenueAccountsResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{18}
}

func (x *ListVenueAccountsResponse) GetVenueAccounts() []*VenueAccount {
	if x != nil {
		return x.VenueAccounts
	}
	return nil
}

type ReadVenueAccountByVenueAccountIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccountId string `protobuf:"bytes,1,opt,name=venue_account_id,json=venueAccountId,proto3" json:"venue_account_id,omitempty"`
}

func (x *ReadVenueAccountByVenueAccountIDRequest) Reset() {
	*x = ReadVenueAccountByVenueAccountIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVenueAccountByVenueAccountIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVenueAccountByVenueAccountIDRequest) ProtoMessage() {}

func (x *ReadVenueAccountByVenueAccountIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVenueAccountByVenueAccountIDRequest.ProtoReflect.Descriptor instead.
func (*ReadVenueAccountByVenueAccountIDRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{19}
}

func (x *ReadVenueAccountByVenueAccountIDRequest) GetVenueAccountId() string {
	if x != nil {
		return x.VenueAccountId
	}
	return ""
}

type ReadVenueAccountByVenueAccountIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccount *VenueAccount `protobuf:"bytes,1,opt,name=venue_account,json=venueAccount,proto3" json:"venue_account,omitempty"`
}

func (x *ReadVenueAccountByVenueAccountIDResponse) Reset() {
	*x = ReadVenueAccountByVenueAccountIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVenueAccountByVenueAccountIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVenueAccountByVenueAccountIDResponse) ProtoMessage() {}

func (x *ReadVenueAccountByVenueAccountIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVenueAccountByVenueAccountIDResponse.ProtoReflect.Descriptor instead.
func (*ReadVenueAccountByVenueAccountIDResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{20}
}

func (x *ReadVenueAccountByVenueAccountIDResponse) GetVenueAccount() *VenueAccount {
	if x != nil {
		return x.VenueAccount
	}
	return nil
}

type ReadPrimaryVenueAccountByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *ReadPrimaryVenueAccountByUserIDRequest) Reset() {
	*x = ReadPrimaryVenueAccountByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPrimaryVenueAccountByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPrimaryVenueAccountByUserIDRequest) ProtoMessage() {}

func (x *ReadPrimaryVenueAccountByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPrimaryVenueAccountByUserIDRequest.ProtoReflect.Descriptor instead.
func (*ReadPrimaryVenueAccountByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{21}
}

func (x *ReadPrimaryVenueAccountByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadPrimaryVenueAccountByUserIDRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type ReadPrimaryVenueAccountByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryVenueAccount *VenueAccount `protobuf:"bytes,1,opt,name=primary_venue_account,json=primaryVenueAccount,proto3" json:"primary_venue_account,omitempty"`
}

func (x *ReadPrimaryVenueAccountByUserIDResponse) Reset() {
	*x = ReadPrimaryVenueAccountByUserIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPrimaryVenueAccountByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPrimaryVenueAccountByUserIDResponse) ProtoMessage() {}

func (x *ReadPrimaryVenueAccountByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPrimaryVenueAccountByUserIDResponse.ProtoReflect.Descriptor instead.
func (*ReadPrimaryVenueAccountByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{22}
}

func (x *ReadPrimaryVenueAccountByUserIDResponse) GetPrimaryVenueAccount() *VenueAccount {
	if x != nil {
		return x.PrimaryVenueAccount
	}
	return nil
}

type ReadVenueAccountByVenueAccountDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue          proto.VENUE `protobuf:"varint,1,opt,name=venue,proto3,enum=VENUE" json:"venue,omitempty"`
	UserId         string      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Subaccount     string      `protobuf:"bytes,3,opt,name=subaccount,proto3" json:"subaccount,omitempty"`
	ActorId        string      `protobuf:"bytes,4,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	RequestContext string      `protobuf:"bytes,5,opt,name=request_context,json=requestContext,proto3" json:"request_context,omitempty"`
	AccountAlias   string      `protobuf:"bytes,6,opt,name=account_alias,json=accountAlias,proto3" json:"account_alias,omitempty"`
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) Reset() {
	*x = ReadVenueAccountByVenueAccountDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVenueAccountByVenueAccountDetailsRequest) ProtoMessage() {}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVenueAccountByVenueAccountDetailsRequest.ProtoReflect.Descriptor instead.
func (*ReadVenueAccountByVenueAccountDetailsRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{23}
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetVenue() proto.VENUE {
	if x != nil {
		return x.Venue
	}
	return proto.VENUE(0)
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetSubaccount() string {
	if x != nil {
		return x.Subaccount
	}
	return ""
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetRequestContext() string {
	if x != nil {
		return x.RequestContext
	}
	return ""
}

func (x *ReadVenueAccountByVenueAccountDetailsRequest) GetAccountAlias() string {
	if x != nil {
		return x.AccountAlias
	}
	return ""
}

type ReadVenueAccountByVenueAccountDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VenueAccount *VenueAccount `protobuf:"bytes,1,opt,name=venue_account,json=venueAccount,proto3" json:"venue_account,omitempty"`
}

func (x *ReadVenueAccountByVenueAccountDetailsResponse) Reset() {
	*x = ReadVenueAccountByVenueAccountDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVenueAccountByVenueAccountDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVenueAccountByVenueAccountDetailsResponse) ProtoMessage() {}

func (x *ReadVenueAccountByVenueAccountDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVenueAccountByVenueAccountDetailsResponse.ProtoReflect.Descriptor instead.
func (*ReadVenueAccountByVenueAccountDetailsResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{24}
}

func (x *ReadVenueAccountByVenueAccountDetailsResponse) GetVenueAccount() *VenueAccount {
	if x != nil {
		return x.VenueAccount
	}
	return nil
}

type ReadInternalVenueAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Venue            proto.VENUE      `protobuf:"varint,1,opt,name=venue,proto3,enum=VENUE" json:"venue,omitempty"`
	VenueAccountType VenueAccountType `protobuf:"varint,2,opt,name=venue_account_type,json=venueAccountType,proto3,enum=VenueAccountType" json:"venue_account_type,omitempty"`
	Subaccount       string           `protobuf:"bytes,3,opt,name=subaccount,proto3" json:"subaccount,omitempty"`
	ActorId          string           `protobuf:"bytes,4,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *ReadInternalVenueAccountRequest) Reset() {
	*x = ReadInternalVenueAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInternalVenueAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInternalVenueAccountRequest) ProtoMessage() {}

func (x *ReadInternalVenueAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInternalVenueAccountRequest.ProtoReflect.Descriptor instead.
func (*ReadInternalVenueAccountRequest) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{25}
}

func (x *ReadInternalVenueAccountRequest) GetVenue() proto.VENUE {
	if x != nil {
		return x.Venue
	}
	return proto.VENUE(0)
}

func (x *ReadInternalVenueAccountRequest) GetVenueAccountType() VenueAccountType {
	if x != nil {
		return x.VenueAccountType
	}
	return VenueAccountType_TESTING
}

func (x *ReadInternalVenueAccountRequest) GetSubaccount() string {
	if x != nil {
		return x.Subaccount
	}
	return ""
}

func (x *ReadInternalVenueAccountRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

type ReadInternalVenueAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InternalVenueAccount *InternalVenueAccount `protobuf:"bytes,1,opt,name=internal_venue_account,json=internalVenueAccount,proto3" json:"internal_venue_account,omitempty"`
}

func (x *ReadInternalVenueAccountResponse) Reset() {
	*x = ReadInternalVenueAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInternalVenueAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInternalVenueAccountResponse) ProtoMessage() {}

func (x *ReadInternalVenueAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_trade_account_proto_tradeaccount_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInternalVenueAccountResponse.ProtoReflect.Descriptor instead.
func (*ReadInternalVenueAccountResponse) Descriptor() ([]byte, []int) {
	return file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP(), []int{26}
}

func (x *ReadInternalVenueAccountResponse) GetInternalVenueAccount() *InternalVenueAccount {
	if x != nil {
		return x.InternalVenueAccount
	}
	return nil
}

var File_service_trade_account_proto_tradeaccount_proto protoreflect.FileDescriptor

var file_service_trade_account_proto_tradeaccount_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb9, 0x03, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73,
	0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x63, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x44, 0x63, 0x61, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x9a, 0x02, 0x0a, 0x0c,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x05,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x56, 0x45,
	0x4e, 0x55, 0x45, 0x52, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06,
	0x77, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x14, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x06, 0x2e, 0x56, 0x45, 0x4e, 0x55, 0x45, 0x52, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x12, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x3c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x2d, 0x0a,
	0x12, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x13,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x13, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x12, 0x6c, 0x6f,
	0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x03,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x13, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x68,
	0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x12, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x75, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x63, 0x61, 0x5f, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x63, 0x61, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x2b, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x56, 0x45, 0x4e, 0x55, 0x45,
	0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x22, 0x3b,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x12, 0x50,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd1,
	0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x16,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x2a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x75, 0x6e, 0x6d,
	0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x55, 0x6e, 0x6d,
	0x61, 0x73, 0x6b, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x22, 0x51, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0e, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x27, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x28, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x26, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x27, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x13, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x2c, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x56, 0x45, 0x4e, 0x55, 0x45, 0x52, 0x05, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x63, 0x0a, 0x2d, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0c, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x1f, 0x52,
	0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e,
	0x56, 0x45, 0x4e, 0x55, 0x45, 0x52, 0x05, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x12,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x20, 0x52, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x16,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x37, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52,
	0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c,
	0x10, 0x03, 0x2a, 0x22, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x10, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x45,
	0x53, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x41, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x45, 0x41, 0x53, 0x55, 0x52, 0x59,
	0x10, 0x02, 0x32, 0xc1, 0x08, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x13, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x13, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x17, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x41, 0x64, 0x64,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x20, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e,
	0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x88, 0x01, 0x0a, 0x25, 0x52, 0x65, 0x61, 0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2d, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56,
	0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1f, 0x52,
	0x65, 0x61, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x27,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65,
	0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x56, 0x65, 0x6e, 0x75, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x73, 0x61, 0x73, 0x68, 0x61, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_trade_account_proto_tradeaccount_proto_rawDescOnce sync.Once
	file_service_trade_account_proto_tradeaccount_proto_rawDescData = file_service_trade_account_proto_tradeaccount_proto_rawDesc
)

func file_service_trade_account_proto_tradeaccount_proto_rawDescGZIP() []byte {
	file_service_trade_account_proto_tradeaccount_proto_rawDescOnce.Do(func() {
		file_service_trade_account_proto_tradeaccount_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_trade_account_proto_tradeaccount_proto_rawDescData)
	})
	return file_service_trade_account_proto_tradeaccount_proto_rawDescData
}

var file_service_trade_account_proto_tradeaccount_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_service_trade_account_proto_tradeaccount_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_service_trade_account_proto_tradeaccount_proto_goTypes = []interface{}{
	(PagerType)(0),                                        // 0: PagerType
	(PagerPriority)(0),                                    // 1: PagerPriority
	(VenueAccountType)(0),                                 // 2: VenueAccountType
	(*Account)(nil),                                       // 3: Account
	(*VenueAccount)(nil),                                  // 4: VenueAccount
	(*InternalVenueAccount)(nil),                          // 5: InternalVenueAccount
	(*ListAccountsRequest)(nil),                           // 6: ListAccountsRequest
	(*ListAccountsResponse)(nil),                          // 7: ListAccountsResponse
	(*ReadAccountRequest)(nil),                            // 8: ReadAccountRequest
	(*ReadAccountResponse)(nil),                           // 9: ReadAccountResponse
	(*CreateAccountRequest)(nil),                          // 10: CreateAccountRequest
	(*CreateAccountResponse)(nil),                         // 11: CreateAccountResponse
	(*UpdateAccountRequest)(nil),                          // 12: UpdateAccountRequest
	(*UpdateAccountResponse)(nil),                         // 13: UpdateAccountResponse
	(*PageAccountRequest)(nil),                            // 14: PageAccountRequest
	(*PageAccountResponse)(nil),                           // 15: PageAccountResponse
	(*AddVenueAccountRequest)(nil),                        // 16: AddVenueAccountRequest
	(*AddVenueAccountResponse)(nil),                       // 17: AddVenueAccountResponse
	(*CreateOrUpdateInternalVenueAccountRequest)(nil),     // 18: CreateOrUpdateInternalVenueAccountRequest
	(*CreateOrUpdateInternalVenueAccountResponse)(nil),    // 19: CreateOrUpdateInternalVenueAccountResponse
	(*ListVenueAccountsRequest)(nil),                      // 20: ListVenueAccountsRequest
	(*ListVenueAccountsResponse)(nil),                     // 21: ListVenueAccountsResponse
	(*ReadVenueAccountByVenueAccountIDRequest)(nil),       // 22: ReadVenueAccountByVenueAccountIDRequest
	(*ReadVenueAccountByVenueAccountIDResponse)(nil),      // 23: ReadVenueAccountByVenueAccountIDResponse
	(*ReadPrimaryVenueAccountByUserIDRequest)(nil),        // 24: ReadPrimaryVenueAccountByUserIDRequest
	(*ReadPrimaryVenueAccountByUserIDResponse)(nil),       // 25: ReadPrimaryVenueAccountByUserIDResponse
	(*ReadVenueAccountByVenueAccountDetailsRequest)(nil),  // 26: ReadVenueAccountByVenueAccountDetailsRequest
	(*ReadVenueAccountByVenueAccountDetailsResponse)(nil), // 27: ReadVenueAccountByVenueAccountDetailsResponse
	(*ReadInternalVenueAccountRequest)(nil),               // 28: ReadInternalVenueAccountRequest
	(*ReadInternalVenueAccountResponse)(nil),              // 29: ReadInternalVenueAccountResponse
	(*timestamppb.Timestamp)(nil),                         // 30: google.protobuf.Timestamp
	(proto.VENUE)(0),                                      // 31: VENUE
}
var file_service_trade_account_proto_tradeaccount_proto_depIdxs = []int32{
	30, // 0: Account.created:type_name -> google.protobuf.Timestamp
	30, // 1: Account.last_updated:type_name -> google.protobuf.Timestamp
	30, // 2: Account.last_payment_timestamp:type_name -> google.protobuf.Timestamp
	31, // 3: VenueAccount.venue:type_name -> VENUE
	31, // 4: InternalVenueAccount.venue:type_name -> VENUE
	2,  // 5: InternalVenueAccount.venue_account_type:type_name -> VenueAccountType
	3,  // 6: ListAccountsResponse.accounts:type_name -> Account
	3,  // 7: ReadAccountResponse.account:type_name -> Account
	0,  // 8: CreateAccountRequest.high_priority_pager:type_name -> PagerType
	0,  // 9: CreateAccountRequest.low_priority_pager:type_name -> PagerType
	0,  // 10: UpdateAccountRequest.high_priority_pager:type_name -> PagerType
	0,  // 11: UpdateAccountRequest.low_priority_pager:type_name -> PagerType
	31, // 12: UpdateAccountRequest.primary_venue:type_name -> VENUE
	3,  // 13: UpdateAccountResponse.account:type_name -> Account
	1,  // 14: PageAccountRequest.priority:type_name -> PagerPriority
	4,  // 15: AddVenueAccountRequest.venue_account:type_name -> VenueAccount
	4,  // 16: AddVenueAccountResponse.venue_account:type_name -> VenueAccount
	5,  // 17: CreateOrUpdateInternalVenueAccountRequest.internal_venue_account:type_name -> InternalVenueAccount
	5,  // 18: CreateOrUpdateInternalVenueAccountResponse.internal_venue_account:type_name -> InternalVenueAccount
	4,  // 19: ListVenueAccountsResponse.venue_accounts:type_name -> VenueAccount
	4,  // 20: ReadVenueAccountByVenueAccountIDResponse.venue_account:type_name -> VenueAccount
	4,  // 21: ReadPrimaryVenueAccountByUserIDResponse.primary_venue_account:type_name -> VenueAccount
	31, // 22: ReadVenueAccountByVenueAccountDetailsRequest.venue:type_name -> VENUE
	4,  // 23: ReadVenueAccountByVenueAccountDetailsResponse.venue_account:type_name -> VenueAccount
	31, // 24: ReadInternalVenueAccountRequest.venue:type_name -> VENUE
	2,  // 25: ReadInternalVenueAccountRequest.venue_account_type:type_name -> VenueAccountType
	5,  // 26: ReadInternalVenueAccountResponse.internal_venue_account:type_name -> InternalVenueAccount
	6,  // 27: tradeaccount.ListAccounts:input_type -> ListAccountsRequest
	8,  // 28: tradeaccount.ReadAccount:input_type -> ReadAccountRequest
	10, // 29: tradeaccount.CreateAccount:input_type -> CreateAccountRequest
	12, // 30: tradeaccount.UpdateAccount:input_type -> UpdateAccountRequest
	14, // 31: tradeaccount.PageAccount:input_type -> PageAccountRequest
	16, // 32: tradeaccount.AddVenueAccount:input_type -> AddVenueAccountRequest
	18, // 33: tradeaccount.CreateOrUpdateInternalVenueAccount:input_type -> CreateOrUpdateInternalVenueAccountRequest
	20, // 34: tradeaccount.ListVenueAccounts:input_type -> ListVenueAccountsRequest
	22, // 35: tradeaccount.ReadVenueAccountByVenueAccountID:input_type -> ReadVenueAccountByVenueAccountIDRequest
	26, // 36: tradeaccount.ReadVenueAccountByVenueAccountDetails:input_type -> ReadVenueAccountByVenueAccountDetailsRequest
	24, // 37: tradeaccount.ReadPrimaryVenueAccountByUserID:input_type -> ReadPrimaryVenueAccountByUserIDRequest
	28, // 38: tradeaccount.ReadInternalVenueAccount:input_type -> ReadInternalVenueAccountRequest
	7,  // 39: tradeaccount.ListAccounts:output_type -> ListAccountsResponse
	9,  // 40: tradeaccount.ReadAccount:output_type -> ReadAccountResponse
	11, // 41: tradeaccount.CreateAccount:output_type -> CreateAccountResponse
	13, // 42: tradeaccount.UpdateAccount:output_type -> UpdateAccountResponse
	15, // 43: tradeaccount.PageAccount:output_type -> PageAccountResponse
	17, // 44: tradeaccount.AddVenueAccount:output_type -> AddVenueAccountResponse
	19, // 45: tradeaccount.CreateOrUpdateInternalVenueAccount:output_type -> CreateOrUpdateInternalVenueAccountResponse
	21, // 46: tradeaccount.ListVenueAccounts:output_type -> ListVenueAccountsResponse
	23, // 47: tradeaccount.ReadVenueAccountByVenueAccountID:output_type -> ReadVenueAccountByVenueAccountIDResponse
	27, // 48: tradeaccount.ReadVenueAccountByVenueAccountDetails:output_type -> ReadVenueAccountByVenueAccountDetailsResponse
	25, // 49: tradeaccount.ReadPrimaryVenueAccountByUserID:output_type -> ReadPrimaryVenueAccountByUserIDResponse
	29, // 50: tradeaccount.ReadInternalVenueAccount:output_type -> ReadInternalVenueAccountResponse
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_service_trade_account_proto_tradeaccount_proto_init() }
func file_service_trade_account_proto_tradeaccount_proto_init() {
	if File_service_trade_account_proto_tradeaccount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VenueAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalVenueAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVenueAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVenueAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateInternalVenueAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateInternalVenueAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenueAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVenueAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVenueAccountByVenueAccountIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVenueAccountByVenueAccountIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPrimaryVenueAccountByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPrimaryVenueAccountByUserIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVenueAccountByVenueAccountDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVenueAccountByVenueAccountDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInternalVenueAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_trade_account_proto_tradeaccount_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadInternalVenueAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_trade_account_proto_tradeaccount_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_trade_account_proto_tradeaccount_proto_goTypes,
		DependencyIndexes: file_service_trade_account_proto_tradeaccount_proto_depIdxs,
		EnumInfos:         file_service_trade_account_proto_tradeaccount_proto_enumTypes,
		MessageInfos:      file_service_trade_account_proto_tradeaccount_proto_msgTypes,
	}.Build()
	File_service_trade_account_proto_tradeaccount_proto = out.File
	file_service_trade_account_proto_tradeaccount_proto_rawDesc = nil
	file_service_trade_account_proto_tradeaccount_proto_goTypes = nil
	file_service_trade_account_proto_tradeaccount_proto_depIdxs = nil
}
